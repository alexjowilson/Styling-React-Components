{"ast":null,"code":"var _jsxFileName = \"/Users/alexwilson/Documents/udemy/styling_react_components/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  const FormControl = styled.div`\n    margin: 0.5rem 0;\n    \n    & label {\n      font-weight: bold;\n      display: block;\n      margin-bottom: 0.5rem;\n    }\n    \n    & input {\n      display: block;\n      width: 100%;\n      border: 1px solid #{props => props.invalid ? 'red' : '#ccc};\n      font: inherit;\n      line-height: 1.5rem;\n      padding: 0 0.25rem;\n    }\n    \n    & input:focus {\n      outline: none;\n      background: #fad0ec;\n      border-color: #8b005d;\n    }\n    \n    &.invalid input {\n      border-color: red;\n      background: #ffd7d7;\n    }\n    \n    &.invalid label {\n      color: red;\n  }\n  `;\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    // if it is valid entry, get rid of error indicators\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    /* if the user, enters in nothing */\n\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false); // set to not valid, bc there is nothing entered in\n\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      invalid: !isValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseInput, \"Ni07CKV3TMNSLbvOpvFwyLAEJlc=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/styling_react_components/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","styled","Button","CourseInput","props","FormControl","div","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAMC,WAAW,GAAIJ,MAAM,CAACK,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhCE;AAmCA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AAGA,QAAMW,sBAAsB,GAAGC,KAAK,IAAI;AAEtC;AACA,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAtC,EACA;AACEN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAEDF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GATD;;AAWA,QAAMG,iBAAiB,GAAGL,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACM,cAAN;AAEA;;AACA,QAAGX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAlC,EACA;AACEN,MAAAA,UAAU,CAAC,KAAD,CAAV,CADF,CACqB;;AACnB;AACD;;AACDN,IAAAA,KAAK,CAACe,SAAN,CAAgBZ,YAAhB;AACD,GAVD;;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,CAACR,OAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxED;;GAAMR,W;;KAAAA,W;AA0EN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n\nimport Button from '../../UI/Button/Button';\nimport './CourseInput.css';\n\nconst CourseInput = props => {\n  const FormControl =  styled.div`\n    margin: 0.5rem 0;\n    \n    & label {\n      font-weight: bold;\n      display: block;\n      margin-bottom: 0.5rem;\n    }\n    \n    & input {\n      display: block;\n      width: 100%;\n      border: 1px solid #{props => props.invalid ? 'red' : '#ccc};\n      font: inherit;\n      line-height: 1.5rem;\n      padding: 0 0.25rem;\n    }\n    \n    & input:focus {\n      outline: none;\n      background: #fad0ec;\n      border-color: #8b005d;\n    }\n    \n    &.invalid input {\n      border-color: red;\n      background: #ffd7d7;\n    }\n    \n    &.invalid label {\n      color: red;\n  }\n  `;\n\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n\n  const goalInputChangeHandler = event => {\n\n    // if it is valid entry, get rid of error indicators\n    if(event.target.value.trim().length > 0)\n    {\n      setIsValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    /* if the user, enters in nothing */\n    if(enteredValue.trim().length === 0)\n    {\n      setIsValid(false); // set to not valid, bc there is nothing entered in\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <FormControl invalid={!isValid}>\n        <label >Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </FormControl>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}